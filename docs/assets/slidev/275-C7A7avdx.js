import{o,c as u,k as r,q as s,s as a,B as e,e as l,a7 as n}from"../modules/vue-5f8YWAHd.js";import{I as p}from"./default-BtheRtPX.js";import{eF as t}from"../index-Bz6hXiy0.js";import{p as i,u as c,f as m}from"./context-DLMsinnS.js";import"../modules/shiki-Bzt_bDtX.js";const d=l("ul",null,[l("li",null,[l("p",null,"テストケース"),l("ul",null,[l("li",null,[l("p",null,[n("通常は"),l("b",{class:"safe"},"1つの機能に対して複数のテストケースを用意する"),n("。例えば"),l("code",null,"double_number()"),n("関数に対して、正負の数、文字列、リスト、"),l("code",null,"None"),n("（Nullケース）など色々な種類を渡すなど。")])]),l("li",null,[l("p",null,"やや複雑で実践的なレべルとなると、テストコードを以下の3セクションに分けることが多い。"),l("ol",null,[l("li",null,[l("p",null,[l("strong",null,"アレンジ(Arrange)"),n(": 入力値の準備")]),l("p",null,"テストに使用する値の定義やインスタンスの生成、依存関係のインポートなど")]),l("li",null,[l("p",null,[l("strong",null,"アクト(Act)"),n(": テスト対象コードの実行")]),l("p",null,"テスト対象コードを実行し、結果を得る")]),l("li",null,[l("p",null,[l("strong",null,"アサーション(Assert)"),n(": 出力の検証")])])]),l("p",null,"戻り値が期待値と等しい事、また結果の状態が期待通りであることを確認する。"),l("p",null,[n("他にも「"),l("strong",null,"Given"),n(", "),l("strong",null,"When"),n(", "),l("strong",null,"Then"),n("」のセクションに分けることもあるが、基本的な考え方は同じ。")])])])])],-1),k={__name:"275",setup(f){return i(t),c(),(_,g)=>(o(),u(p,s(a(e(m)(e(t),274))),{default:r(()=>[d]),_:1},16))}};export{k as default};
