import{o as a,c as n,k as r,q as l,s as c,B as s,e as t,a7 as o}from"../modules/vue-5f8YWAHd.js";import{I as i}from"./default-B_XGSeiy.js";import{e9 as e}from"../index-B5G1tGyL.js";import{p,u,f as _}from"./context-GBBOVTOM.js";import"../modules/shiki-Bzt_bDtX.js";const m=t("h3",null,"SRP(Single Responsibility Principle)、単一責任の原則",-1),d=t("h3",null,[t("b",{class:"safe"},"クラスの果たす責任は1つに限定すべき"),o("という原則")],-1),f=t("p",null,[o("クラスに"),t("b",{class:"warn"},"多くの責任"),o("があると、それだけバグが発生しやすくなる。")],-1),h=t("p",null,[t("strong",null,"コードの再利用性とまとまりに関するルール"),o("で関心の分離にもつながる。")],-1),P=t("p",null,[o("「"),t("b",{class:"safe"},"1つ"),o("」をどれぐらいの粒度で決めるべきかは意見が分かれるが、「ロバストPython」の著者であるPatrick Viaforeは、以下のように述べている。")],-1),b=t("blockquote",null,[t("p",null,"単純な話のようだが、「1つ」の理由をどの程度の粒度にすればよいか正確に判断するのは難しい。"),t("p",null,"私は関連する不変式のグループを定義し、そういったグループごとにクラスを書くとよいのではないかと考えている。"),t("p",null,[o("これらの不変式と直接関係の無い属性やメソッドを書いていることに気づいたら、そのクラスは"),t("strong",null,"まとまり"),o("が悪い。つまり、責任が多すぎる。")])],-1),q={__name:"243",setup(k){return p(e),u(),(x,g)=>(a(),n(i,l(c(s(_)(s(e),242))),{default:r(()=>[m,d,f,h,P,b]),_:1},16))}};export{q as default};
